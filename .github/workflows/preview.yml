name: Deploy Feature Branch Preview

on:
  push:
    branches:
      - 'feature/**'

# Add explicit permissions for this workflow
permissions:
  contents: write
  pages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      
      - name: Get branch name
        id: branch-name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
      - name: Extract feature name
        id: extract-name
        run: echo "FEATURE_NAME=${BRANCH_NAME#feature/}" >> $GITHUB_ENV
        env:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
      
      - name: Create temporary directory for feature files
        run: |
          mkdir -p temp-preview-dir
          # Copy files to the temporary directory, excluding .git and other unnecessary files
          rsync -av --exclude='.git' --exclude='.github' --exclude='node_modules' ./ temp-preview-dir/
      
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages-branch
          clean: false
      
      - name: Prepare preview directory
        run: |
          # Create the target directory
          mkdir -p gh-pages-branch/previews/${{ env.FEATURE_NAME }}
          # Remove old content if it exists
          rm -rf gh-pages-branch/previews/${{ env.FEATURE_NAME }}/*
          # Copy the files from our temp directory
          cp -r temp-preview-dir/* gh-pages-branch/previews/${{ env.FEATURE_NAME }}/
      
      - name: Commit and push to gh-pages
        run: |
          cd gh-pages-branch
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          # Continue even if there are no changes to commit
          git commit -m "Deploy preview for ${{ env.BRANCH_NAME }}" || echo "No changes to commit"
          git push